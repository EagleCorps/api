#!/usr/bin/env zsh

cp -n .example.env .env.local

NEXTAUTH_SECRET=$(openssl rand -base64 32)
${0:A:h}/sed -i "s/^NEXTAUTH_SECRET= #.*$/NEXTAUTH_SECRET=$(${0:A:h}/escape-key $NEXTAUTH_SECRET)/g" .env.local

SIGNING_ALGORITHM_OPENSSL=rsa
SIGNING_ALGORITHM_JOSE=RS256
PRIVATE_KEY_CURRENT=$(openssl genpkey -algorithm $SIGNING_ALGORITHM_OPENSSL)
PUBLIC_KEY_CURRENT=$(echo -n $PRIVATE_KEY_CURRENT | openssl pkey -pubout)
PRIVATE_KEY_UPCOMING=$(openssl genpkey -algorithm $SIGNING_ALGORITHM_OPENSSL)
PUBLIC_KEY_UPCOMING=$(echo -n $PRIVATE_KEY_UPCOMING | openssl pkey -pubout)

${0:A:h}/sed -i "s/^NEXT_PUBLIC_HASURA_JWT_SIGNING_ALGORITHM_CURRENT= #.*$/NEXT_PUBLIC_HASURA_JWT_SIGNING_ALGORITHM_CURRENT='$SIGNING_ALGORITHM_JOSE'/g" .env.local
${0:A:h}/sed -i "s/^NEXT_PUBLIC_HASURA_JWT_PUBLIC_KEY_CURRENT= #.*$/NEXT_PUBLIC_HASURA_JWT_PUBLIC_KEY_CURRENT='$(${0:A:h}/escape-key $PUBLIC_KEY_CURRENT)'/g" .env.local
${0:A:h}/sed -i "s/^HASURA_JWT_PRIVATE_KEY_CURRENT= #.*$/HASURA_JWT_PRIVATE_KEY_CURRENT='$(${0:A:h}/escape-key $PRIVATE_KEY_CURRENT)'/g" .env.local
${0:A:h}/sed -i "s/^NEXT_PUBLIC_HASURA_JWT_SIGNING_ALGORITHM_UPCOMING= #.*$/NEXT_PUBLIC_HASURA_JWT_SIGNING_ALGORITHM_UPCOMING='$SIGNING_ALGORITHM_JOSE'/g" .env.local
${0:A:h}/sed -i "s/^NEXT_PUBLIC_HASURA_JWT_PUBLIC_KEY_UPCOMING= #.*$/NEXT_PUBLIC_HASURA_JWT_PUBLIC_KEY_UPCOMING='$(${0:A:h}/escape-key $PUBLIC_KEY_UPCOMING)'/g" .env.local
${0:A:h}/sed -i "s/^HASURA_JWT_PRIVATE_KEY_UPCOMING= #.*$/HASURA_JWT_PRIVATE_KEY_UPCOMING='$(${0:A:h}/escape-key $PRIVATE_KEY_UPCOMING)'/g" .env.local
